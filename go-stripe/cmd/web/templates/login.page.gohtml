{{template "base" .}}

{{define "title"}}
    Login
{{end}}

{{define "content"}}
    <div class="alert alert-danger text-center d-none" id="login_messages"></div>

    <form action="" method="post"
        name="login_form" id="login_form"
        class="d-block needs-validation login_form"
        autocomplete="off" novalidate=""
    >
        <h2 class="mt-2 mb-3 text-center">Login</h2>
        <hr>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" id="email" name="email" 
            class="form-control" required="" autocomplete="email-new"
            >
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" id="password" name="password" 
            class="form-control" required="" autocomplete="password-new"
            >
        </div>

        <a id="" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Login</a>
    </form>
{{end}}

{{define "js"}}
    <script>
    const form = document.getElementById("login_form");
    const loginMessages = document.getElementById("login_messages");

    function showError(msg) {
        loginMessages.classList.add("alert-danger");
        loginMessages.classList.remove("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerText = msg;
    }

    function showSuccess() {
        loginMessages.classList.remove("alert-danger");
        loginMessages.classList.add("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerText = "Login Successful";
    }

    function val() {
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated");
            return;
        }
        form.classList.add("was-validated");

        let payload = {
            email: document.getElementById("email").value,
            password: document.getElementById("password").value,
        };

        const requestOptions = {
            method: "post",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json",
            },
            body: JSON.stringify(payload),
        };

        fetch("{{.API}}/api/authenticate", requestOptions)
            .then(response => response.json())
            .then(data => {
                console.log(data);
                if (data.error === false) {
                    localStorage.setItem("token", data.authentication_token.token)
                    localStorage.setItem("token_expiry", data.authentication_token.expiry)
                    showSuccess();
                    location.href = "/";
                } else {
                    showError(data.message);
                }
            });
    }
    </script>
{{end}}