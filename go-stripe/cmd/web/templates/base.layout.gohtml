{{define "base"}}
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>
    {{block "title" .}}
    {{end}}
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container-fluid">
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item active">
              <a class="nav-link" href="/">Home</a>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Products
              </a>
              <ul class="dropdown-menu dropdown-menu" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" href="/widget/1">Buy one widget</a></li>
                <li><a class="dropdown-item" href="/plans/bronze">Subscription</a></li>
              </ul>
            </li>
            </li>

            {{if eq .IsAuthenticated 1}}
              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                  Admin
                </a>
                <ul class="dropdown-menu dropdown-menu" aria-labelledby="navbarDropdown">
                  <li><a class="dropdown-item" href="/admin/virtual-terminal">Virtual Terminal</a></li>
                  <li><hr class="dropdown-divider"></li>
                  <li><a class="dropdown-item" href="/admin/all-sales">All Sales</a></li>
                  <li><a class="dropdown-item" href="/admin/all-subscriptions">All Subscriptions</a></li>
                  <li><hr class="dropdown-divider"></li>
                  <li><a class="dropdown-item" href="/admin/all-users">All Users</a></li>
                  <li><hr class="dropdown-divider"></li>
                  <li><a class="dropdown-item" href="/logout">Logout</a></li>
                </ul>
              </li>
            {{end}}

          </ul>

          {{if eq .IsAuthenticated 1}}
            <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
              <li id="login-link" class="nav-item">
                <a class="nav-link" href="/logout">Logout</a>
              </li>
            </ul>
          {{else}}
            <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
              <li id="login-link" class="nav-item">
                <a class="nav-link" href="/login">Login</a>
              </li>
            </ul>
          {{end}}
          
        </div>
      </div>
    </nav>

    <div class="container">
        <div class="row">
            <div class="col">
                {{block "content" .}} {{end}}
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
    <script>
    {{if eq .IsAuthenticated 1}}
      let socket;
      document.addEventListener("DOMContentLoaded", () => {
        socket = new WebSocket("ws://localhost:4000/ws");

        socket.onopen = () => {
          console.log("Successfully connected to websockets");
        };

        socket.onclose = event => {};

        socket.onerror = error => {};

        socket.onmessage = msg => {
          let data = JSON.parse(msg.data);

          switch (data.action) {
            case "logout":
              if (data.user_id === {{.UserID}}) {
                logout();
                checkAuth(); // should revalidate
              }
              break;
            default:
          }
        };
      });    
    {{end}}

      const logout = () => {
        localStorage.removeItem("token");
        localStorage.removeItem("token_expiry");
        location.href = "/login";
      };

      const checkAuth = () => {
        if (localStorage.getItem("token") === null) {
          location.href = "/logout";
          return
        } else {
          let token = localStorage.getItem("token");
          const myHeaders = new Headers();
          myHeaders.append("Content-Type", "application/json");
          myHeaders.append("Authorization", "Bearer " + token);

          const requestOptions = {
            method: "POST",
            headers: myHeaders,
          };

          fetch("{{.API}}/api/is-authenticated", requestOptions)
          .then(response => response.json())
          .then(data => {
            if (data.error === true) {
              if (localStorage.getItem("token") !== null) {
                localStorage.removeItem("token");
                localStorage.removeItem("token_expiry");
              }
              location.href = "/login";
            } else {
              console.log(data.message);
            }
          })
        }
      };
    </script>
    {{block "js" .}}
    {{end}}
  </body>
</html>
{{end}}